<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Welcome!{% endblock %}</title>
        {% block stylesheets %}
            <link rel="stylesheet" href="{{ asset('build/css/app.css') }}">
            <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU" crossorigin="anonymous">
        {% endblock %}
    </head>
    <body class="bg-light">

        <nav class="navbar navbar-dark navbar-expand-md sticky-top bg-dark p-0">
            <a class="navbar-brand col-sm-3 col-md-2 mr-0"
               href="{{ path('micro_post_index') }}">Micro Post App</a>
            <div class="w-100 order-1 order-md-0">
                <ul class="navbar-nav px-3">
                    {# con la funcion is_granted('role') comprobamos el role del usuario login#}
                    {% if is_granted('ROLE_USER') %}
                        <li class="nav-item text-nowrap">
                            <a class="nav-link" href="{{ path('micro_post_add') }}">Add new</a>
                        </li>
                    {% endif %}
                </ul>
            </div>

            <div class="order-2 order-md-1">
                <ul class="navbar-nav px-3">
                    {% if is_granted('ROLE_USER') %}

                        {# Notificaciones #}
                        <li class="nav-item text-nowrap border-right border-secondary">
                            <a href="{{ path("unseen_notifications") }}" class="nav-link">
                                Notifications
                                <span class="badge badge-light" id="notification-count">
                                    <i class="fa fa-spinner fa-spin"></i>
                                </span>
                            </a>
                        </li>

                        <li class="nav-item text-nowrap">
                            <a class="nav-link"
                               {# en la variable app podemos acceder al user y de aqui a los atributos de la entidad, id, email, fullName, etc..#}
                               href="{{ path("micro_post_user", {"username": app.user.username}) }}">{{ app.user.fullName }}</a>
                        </li>
                        <li class="nav-item text-nowrap">
                            <a class="nav-link"
                               {# otra manera de hacer el logout es utilizar la funcion de twig logout_path('key del firewall') #}
                               {# si por ejemplo estamos usando el main firewall pondremos la funcion asi {{ logout_path('main') }} #}
                               href="{{ path('security_logout') }}">Sign out</a>
                        </li>
                    {% else %}
                        <li class="nav-item text-nowrap">
                            <a class="nav-link"
                               href="{{ path('security_login') }}">Sign in</a>
                        </li>
                    {% endif %}
                </ul>
            </div>
        </nav>

        <main role="main" class="container">
            <div class="my-3 p-3 bg-white rounded box-shadow">

                {% block body %}
                {% endblock %}

            </div>
        </main>
        {% block javascripts %}
            <script src="{{ asset('build/js/app.js') }}"></script>

            {# Cargar el script solo si el user esta logeado #}
            {% if is_granted('ROLE_USER') %}

                <script>
                    function getNotificationsCount() {

                        // AJAX (Path, credentias)
                        fetch('{{ path('notification_unread') }}', {"credentials": "include"}).then((response) => {

                            response.json().then((json) => {

                                // Coger el elemento del span y añadirle el count que nos devuelve la peticion ajax
                                document.getElementById("notification-count").innerText = json.count;

                                // Dos maneras de hacer el Timeout

                                // si le pasamos el nombre de la funcion sin los parentesis funciona bien, si le añadimos los parentesis
                                // crea un loop infinito.
                                setTimeout(getNotificationsCount, 5000);

                                // Si queremos pasar el nombre de la funcion con parentesis hay que poner una funcion anonima entre medio
                                /*setTimeout(() => {
                                    getNotificationsCount();
                                }, 5000);*/

                            });

                        }).catch(function (reason) {

                        });
                    }

                    // Llamada a la funcion que hara la peticion ajax al server/controlador
                    getNotificationsCount();

                </script>


            {% endif %}
        {% endblock %}
    </body>
</html>