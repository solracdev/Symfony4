# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    hello_message: 'Well hello there...'
    # usando el metodo de enviorement le pasamos el parametro del MAILER_URl que hemos definido en el fichero .env
    email_from: '%env(MAILER_URl)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
    # Servicio del LikeSubscriberListener, ya que no se puede utilizar el autowire
    App\EventListener\LikeNotificationSubscriber:
        tags:
            # definir en la key name el ID del servicio, en este caso doctrine.event_subscriber, en la key connection definimos default asi cogera la conexion por defecto
            - { name: doctrine.event_subscriber, connection: default }
    
    # Servicio para almacenar las Sessions en la BBDD
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            # Definir parametros si no usamos Doctrine
            #- 'mysql:dbname=session_db'
            #- { db_username: user, db_password: my_password }
            # Cuando usamos doctrine, definimos el servicio y ya es suficiente
            # Aunque de error es un BUG del netbeans
            - !service { class: PDO, factory: 'database_connection:getWrappedConnection' }
            # If you get transaction issues (e.g. after login) uncomment the line below
            - { lock_mode: 1 }
    
    # Psar por parametro el parametro locale definido en este fichero
    App\Event\Language\LocalSubscriber:
        arguments:
            $defaultLocale: '%locale%'
        

    ## ASIGNAR SERVICIOS CUANDO EL AUTOWIRE ESTA EN FALSE O EN ESE CONTROLADOR NO ESTA ACTIVADO
    #App\Controller\BlogController: ['@App\Service\Greeting']
    
    # cuando se pasa por servicio una class ya creada, podemos mirar el ID del servicio con el comando:
    # php bin/console degu:container (nombre servicio, en este caso logger)
    # aqui en vez de poner una class, se pone el ID del servicio.
    #App\Service\Greeting: ['@monolog.logger']
    
    ## Crear Service Alias
    #app.greetings: # esta es la ID del service
        #public: true
        #alias: App\Service\Greeting
        
    App\Twig\AppExtension:
        arguments:
            # manera de asignar el valor de una variable a un parametro definodo en services.yaml
            $locale: '%hello_message%'
    
    App\Mailer\Mailer:
        arguments:
            $emailFrom: '%email_from%'
        
    ## Configurar parametros recibidos por el constructor que no son servicios
#    App\Service\Greeting:
#        arguments:
#            $message: 'Hello from Greeting service'